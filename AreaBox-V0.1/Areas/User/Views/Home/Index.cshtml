@using AreaBox_V0._1.Areas.Auth.Pages;
@using AreaBox_V0._1.Data.Model;
@using Microsoft.AspNetCore.Identity

@model IEnumerable<AreaBox_V0._1.Models.MediaPost.MediaPostViewModel>;
@inject UserManager<ApplicationUser> _userManager;

@{
	var currentUserId = (await _userManager.GetUserAsync(User))?.Id;
}

@{
	ViewData["Title"] = "Index";
}


<style>
	.liked{
		background-color:red;
	}
</style>

<div class="container mt-5">
	<div class="row justify-content-center">
		<div class="col-7">
			@foreach (var mediaPost in Model)
			{
				<div class="card mb-3">
					<div class="card-body">
						<div class="d-flex align-items-center">
							<img src="data:image/png;base64,@mediaPost.User.ProfilePicture" class="avatar me-3" />
							<div>
								<div>@mediaPost.User.UserName</div>
								<div class="text-secondary">@mediaPost.Date</div>
							</div>
						</div>
					</div>
					<div class="card-img-container">
						<img src="data:image/png;base64,@mediaPost.Image" class="card-img-top img-fluid" height="250" width="250" alt="Post Image">
					</div>
					<div class="card-body">
						<div class="card-buttons d-flex justify-content-between">
							<div class="btn btn-like border-0" data-id="@mediaPost.Id">
								<svg xmlns="http://www.w3.org/2000/svg" style="width:30px; height:30px" class="icon icon-like @(mediaPost.MediaPostLikes.Any(x => x.UserId == currentUserId) ? "liked" : "")" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none" />
									<path d="M19.5 12.572l-7.5 7.428l-7.5 -7.428a5 5 0 1 1 7.5 -6.566a5 5 0 1 1 7.5 6.572" />
								</svg>
								<span id="addlike" style="font-size:20px">@mediaPost.PostLike</span>
							</div>

							<div class="btn border-0" data-bs-toggle="modal" data-bs-target="#mediaManagementModal" data-id="@mediaPost.Id">
								<svg xmlns="http://www.w3.org/2000/svg" style="width:30px; height:30px" class="icon" width="64" height="64" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
									<path d="M8 9h8"></path>
									<path d="M8 13h6"></path>
									<path d="M18 4a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12z"></path>
								</svg>
								<span style="font-size:20px">@mediaPost.PostCommends</span>
							</div>
							<div class="btn border-0">
								<svg xmlns="http://www.w3.org/2000/svg" style="width:30px; height:30px" class="icon icon-tabler icon-tabler-archive" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
									<path stroke="none" d="M0 0h24v24H0z" fill="none" />
									<path d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
									<path d="M5 8v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-10" />
									<path d="M10 12l4 0" />
								</svg>
							</div>
						</div>
					</div>
				</div>
				<hr class="hr" />
			}
		</div>
		<div class="col-5">
			test
@* 			<div class="card mb-3">
				<div class="card-body">
					<div class="d-flex align-items-center">
						<img src="data:image/png;base64,@Model.User.ProfilePicture" class="avatar me-3" />
						<div>
							<div>@mediaPost.User.UserName</div>
							<div class="text-secondary">@mediaPost.Date</div>
						</div>
					</div>
				</div>
			<div> *@
		</div>
	</div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
	$(document).on('click', '.btn-like', function () {
		var button = $(this);
		var postId = button.data('id');
		var icon = button.find('.icon-like');
		var likeCountElement = button.find('#addlike');

		var newState = !icon.hasClass('liked');

		$.ajax({
			url: `/AdminApi/LikeMediaPost`,
			type: 'POST',
			data: { id: postId, newState: newState },
			success: function (data) {
				button.toggleClass('liked', newState);
				var currentLikeCount = parseInt(likeCountElement.text(), 10);
				likeCountElement.text(currentLikeCount + (newState ? 1 : -1));
				icon.css('background-color', newState ? 'red' : '');
			},
			error: function (error) {
				console.error('Error updating post state:', error);
			}
		});
	});
</script>


