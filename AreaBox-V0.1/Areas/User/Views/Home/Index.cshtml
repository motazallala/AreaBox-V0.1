@model AreaBox_V0._1.Areas.User.Models.UMediaPostDto.send.UMediaPostIndexDto
@{
	ViewData["Title"] = "MediaPost";
}

<style>
	.make-me-sticky {
		position: -webkit-sticky;
		position: sticky;
		top: 0;
	}

	.alertPos {
		position: fixed;
		top: 10vh;
		right: 16vh;
		z-index: 1000;
		width: 350px;
	}

</style>

<audio controls="controls" id="likeSound" hidden>
	<source src="~/sound_effects/like.mp3" type="audio/mpeg" />
</audio>

<div class="alert alert-success alert-important alert-dismissible alertPos" id="alertSuccess" role="alert" style="display: none;">
	<div class="d-flex">
		<div class="me-2">
			<!-- Download SVG icon from http://tabler-icons.io/i/check -->
			<i style="font-size:24px" class="ti ti-check"></i>
		</div>
		<div id="success-body">
			Wow! Everything worked!
		</div>
	</div>
	<a class="btn-close" data-bs-dismiss="alert" aria-label="close"></a>
</div>



<div class="alert alert-danger alert-important alert-dismissible alertPos" id="alertDanger" role="alert" style="display: none;">
	<div class="d-flex">
		<div class="me-2">
			<!-- Download SVG icon from http://tabler-icons.io/i/alert-circle -->
			<i style="font-size:24px" class="ti ti-alert-circle"></i>
		</div>
		<div id="error-body">
			I'm so sorry…
		</div>
	</div>
	<a class="btn-close" data-bs-dismiss="alert" aria-label="close"></a>
</div>

<div class="alert alert-important alert-warning alert-dismissible alertPos" id="alertDanger" role="alert" style="display: none;">
	<div class="d-flex">
		<div class="me-2">
			<!-- Download SVG icon from http://tabler-icons.io/i/alert-circle -->
			<i style="font-size:24px" class="ti ti-alert-triangle"></i>
		</div>
		<div id="error-body">
			Uh oh, something went wrong
		</div>
	</div>
	<a class="btn-close" data-bs-dismiss="alert" aria-label="close"></a>
</div>

<div class="modal modal-blur" id="mediaManagementModal" data-bs-backdrop="static" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Add a new team</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class=" mb-3 align-items-end">
					<div class="dropzone" id="dropzone-default" action="./" autocomplete="off" novalidate>
						<div class="fallback">
							<input name="file" type="file" id="postImage" />
						</div>
					</div>
				</div>
				<div class="mb-3">
					@*NOTE ---  this will take it from cookie  *@
					<input type="hidden" value="1" id="postInCity" />
					<label class="form-label">Media Post Title</label>
					<input type="text" class="form-control" id="mediaTitle" maxlength="150" />
				</div>
				<div>
					<label class="form-label">Media Post Description</label>
					<textarea class="form-control" data-bs-toggle="autosize" id="mediaDescription" placeholder="Type something…" maxlength="450"></textarea>
				</div>
				<div class="mb-3">
					<label class="form-label">Media Post Category</label>
					<select class="form-select" id="categoryDropdownModel" name="Category">
					</select>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" id="SavePost" data-bs-dismiss="modal">Add Post</button>
			</div>
		</div>

	</div>
</div>


<div class="modal modal-blur" id="reportPostModal" data-bs-backdrop="static" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Report this post</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="mb-3">
					<label for="reportReason" class="form-label">Select a reason for reporting:</label>
					<select class="form-select" id="reportReason" aria-label="Report Reason">
						<!-- Options will be populated here -->
					</select>
				</div>
				<div class="mb-3">
					<label for="reportDescription" class="form-label">Description:</label>
					<textarea class="form-control" id="descriptionDisplay" rows="3" disabled></textarea>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" id="reportButton" data-bs-dismiss="modal" onclick="reportMediaPost()">Report</button>
			</div>
		</div>
	</div>
</div>

<div class="modal" id="commentsModal" data-bs-backdrop="static" tabindex="-1">
	<div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
		<div class="modal-content">
			<!-- Modal Header -->
			<div class="modal-header">
				<h5 class="modal-title">Comments</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>

			<!-- Modal body -->
			<div class="modal-body">
				<div class="row">
					<!-- Left side for Image -->
					<div class="col-md-6 d-flex align-items-center justify-content-center">
						<img src="" id="mediaPostCommentImage" alt="Post Image" class="img-fluid">
					</div>

					<!-- Right side for Comments -->
					<div class="col-md-6">
						<div class="page-body">
							<div class="container-xl">
								<div class="card">
									<div class="card-body" style="height: 60vh; overflow-y: auto;">
										<div class="chat">
											<div id="commentsContainer">
												<!-- Comments will be appended here -->
											</div>
											<div id="commentPager">
												<button class="btn btn-primary mt-5" id="loadMoreComments">Load More</button>
											</div>
											<div id="loading-indicator2" class="my-5" style="display: none;">
												<div class="spinner-border text-primary"></div>
											</div>
										</div>
									</div>
									<div class="card-footer">
										<input type="text" class="form-control mb-2" id="commentContentInput" placeholder="Add a comment...">
										<button class="btn btn-primary" id="addCommentButton">Add Comment</button>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="modal modal-blur fade" id="deletePostModal" tabindex="-1" role="dialog" aria-hidden="true">
	<div class="modal-dialog modal-sm modal-dialog-centered" role="document">
		<div class="modal-content">
			<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			<div class="modal-status bg-danger"></div>
			<div class="modal-body text-center py-4">
				<!-- Download SVG icon from http://tabler-icons.io/i/alert-triangle -->
				<svg xmlns="http://www.w3.org/2000/svg" class="icon mb-2 text-danger icon-lg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M10.24 3.957l-8.422 14.06a1.989 1.989 0 0 0 1.7 2.983h16.845a1.989 1.989 0 0 0 1.7 -2.983l-8.423 -14.06a1.989 1.989 0 0 0 -3.4 0z" /><path d="M12 9v4" /><path d="M12 17h.01" /></svg>
				<h3>Are you sure?</h3>
				<div class="text-secondary">Do you really want to delete this post? What you've done cannot be undone.</div>
			</div>
			<div class="modal-footer">
				<div class="w-100">
					<div class="row">
						<div class="col">
							<a class="btn w-100" data-bs-dismiss="modal">
								Cancel
							</a>
						</div>
						<div class="col">
							<a class="btn btn-danger w-100" id="deletePostButton" data-bs-dismiss="modal">
								Delete
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<!-- Edit post model -->
<div class="modal modal-blur" id="editMediaPostModal" data-bs-backdrop="static" tabindex="-1">
	<div class="modal-dialog modal-xl modal-dialog-centered" role="document">
		<!-- Increase modal size using modal-xl -->
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Edit a post</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<div class="row">

					<div class="col-md-6 d-flex align-items-center justify-content-center">
						<img src="" id="oldImage" alt="Old Image" class="img-fluid">
					</div>

					<div class="col-md-6">
						<div class="mb-3 align-items-end">
							<div class="dropzone" id="editDropzoneDefault" action="./" autocomplete="off" novalidate>
								<div class="fallback">
									<input name="file" type="file" id="postImage" />
								</div>
							</div>
						</div>
						<div class="mb-3">
							<input type="hidden" value="1" id="editPostInCity" />
							<label class="form-label">Media Post Title</label>
							<input type="text" class="form-control" id="editMediaTitle" />
						</div>
						<div>
							<label class="form-label">Media Post Description</label>
							<textarea class="form-control" data-bs-toggle="autosize" id="editMediaDescription" placeholder="Type something…"></textarea>
						</div>
						<div class="mb-3">
							<label class="form-label">Media Post Category</label>
							<select class="form-select" id="editCategoryDropdownModel" name="Category">
								<!-- Your categories here -->
							</select>
						</div>
					</div>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn me-auto" data-bs-dismiss="modal">Close</button>
				<button type="button" class="btn btn-primary" id="editPost" data-bs-dismiss="modal">Save Change</button>
			</div>
		</div>
	</div>
</div>



<div class="row justify-content-center">
	<div class="col-lg-4 col-sm-12 order-lg-2 order-sm-1 order-1  mb-4">
		<div class="make-me-sticky">

			@Html.Partial("_FilteringandUserControlPartial")
		</div>

	</div>
	<div class="col-lg-8 col-sm-12 order-lg-1 order-sm-2 order-2 px-lg-4 px-xl-8">
		<div id="post-container">
			@Html.Partial("_MediaPostListPartial", Model.mediaPostsDtos)
		</div>
		<div class="col text-center">
			<div id="loading-indicator" class="my-5" style="display: none;">
				<div class="spinner-border text-primary"></div>
			</div>
		</div>
		<div class="col text-center ">
			<button type="button" class="btn btn-purple mt-5 " id="loadBut" onclick="loadMorePosts()">
				<i class="ti ti-plus" style="font-size: 24px;"></i>
				load more content
			</button>
		</div>
	</div>
</div>



@section Scripts {

    <script src="~/js/shared/getusercategories.js"></script>
	<script src="~/js/SetlocationName.js"></script>
	<script src="~/js/RefreshMediaPost.js"></script>
    <script src="~/js/searchbycategory.js"></script>

	<script>
		$(document).on('click', '.likeBtn', function () {
			console.log('Button clicked!');

			var button = $(this);
			var postId = button.data('mpid');
			var likeCountElement = button.siblings('.count-post-like');
			button.prop('disabled', true);
			console.log('postId:', postId);

			var formData = new FormData();
			formData.append('MpostId', postId);

			$.ajax({
				url: '/Home/AddLikeToMediaPost', // Update the URL to match your endpoint
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				success: function (data, textStatus, xhr) {
					var currentLikeCount = parseInt(likeCountElement.text(), 10);
					if (xhr.status === 200) {
						if (data === "Post Liked") {
							document.getElementById('likeSound').play();
							button.prop('disabled', false);
							button.addClass('active');
							console.log("like");

							// Increment the like count in the DOM

							likeCountElement.text(currentLikeCount + 1);
						} else if (data === "Post Liked Removed") {
							button.prop('disabled', false);

							console.log("unlike");
							button.removeClass('active');
							likeCountElement.text(currentLikeCount - 1);

							// You may decrement the like count here if needed
						}
					} else {
						// Handle other status codes or error cases
					}
				},
				error: function (error) {
					console.error('AJAX error:', error);
				}
			});
		});

	</script>


	<script>
		$(document).ready(function () {
			// Initialize Dropzone

			var myDropzone = new Dropzone("#dropzone-default", {
				uploadMultiple: false,
				maxFiles: 1, // Set maximum number of files to 1
				acceptedFiles: 'image/jpeg,image/jpg,image/png', // Accept only JPEG and PNG files
				maxFilesize: 50, // Set maximum file size to 50 MB
				maxFilesizeUnit: 'MB', // Specify the unit for maxFilesize
				autoProcessQueue: false, // Do not process the queue automatically
				paramName: 'Image', // Set the parameter name for the file
				addRemoveLinks: true, // Show remove link on preview
				parallelUploads: 1, // Upload one file at a time
				init: function () {
					var submitButton = document.querySelector("#SavePost");
					var self = this; // Store reference to the Dropzone object

					submitButton.disabled = true;

					this.on("addedfile", function () {
						submitButton.disabled = false;
						// Start the manual upload simulation
						simulateUpload();
					});

					this.on("removedfile", function () {
						if (this.files.length === 0) {
							submitButton.disabled = true;
						}
					});

					function simulateUpload() {
						var file = self.files[0];
						var totalSteps = 100;
						var currentStep = 0;

						var uploadInterval = setInterval(function () {
							var random = 15 + Math.random() * 25;
							currentStep += random;
							var progress = currentStep;

							self.emit('uploadprogress', file, progress, progress);

							if (currentStep >= totalSteps) {
								clearInterval(uploadInterval);
								self.emit('success', file, 'success', null);
								self.emit('complete', file);
								self.processQueue();
							}
						}, 200);
					}
				}
			});

			// Handle the SavePost button click
			$("#SavePost").click(function () {
				// Get text data
				var textData = {
					CategoryId: $('#categoryDropdownModel').val(),
					CityId: $('#postInCity').val(),
					ShortDescription: $('#mediaTitle').val(),
					LongDescription: $('#mediaDescription').val()
				};

				// Append text data to FormData
				var formData = new FormData();
				for (var key in textData) {
					formData.append(key, textData[key]);
				}

				// Append the file from Dropzone to FormData
				var file = myDropzone.files[0];
				if (file) {
					formData.append('Image', file);
				}

				console.log(formData);

				$.ajax({
					url: '/Home/AddPost',
					type: 'POST',
					data: formData,
					processData: false,  // Important: Don't process the data
					contentType: false,  // Important: Don't set content type to 'application/json'
					success: function (data) {
						myDropzone.removeAllFiles(true);
						$('#mediaTitle').val('');
						$('#mediaDescription').val('');
						$('#post-container').empty();
						page = 1;
						loadMorePosts();
						// Handle success response if needed
						$('#success-body').text(data);
						$('#alertSuccess').show();
						setTimeout(function () {
							$('#alertSuccess').hide();
						}, 3000);

					},
					error: function (error) {
						// Handle error response if needed
						$('#error-body').text(error.responseText);
						$('#alertDanger').show();
						setTimeout(function () {
							$('#alertDanger').hide();
						}, 3000);
					}
				});
			});
		});

		var Pages = @Model.PagesCount;
		function loadMorePosts() {
			debugger
			var categoryId = $('#categoryDropdown').val();
			if (page <= Pages) {
				console.log("Loading posts - Page " + page);
				$('#loading-indicator').show();
				$("#refreshLoc").prop("disabled", true);
				$("#ApplyBtn").prop("disabled", true);
				$('#loadBut').hide();


				$.ajax({
					url: '/Home/GetMediaPostPartialList',
					type: 'GET',
					data: { page: page, categoryId : categoryId },
					success: function (data) {
						// Append the new posts to the post container
						$('#post-container').append(data);
						page++; // Increment the page number for the next request
						loading = false; // Reset loading flag after successful load
						$('#loading-indicator').hide();
						$("#refreshLoc").prop("disabled", false);
						$("#ApplyBtn").prop("disabled", false);
						$('#loadBut').show();

					},
					error: function () {
						console.log('Error loading posts.');
						$('#loading-indicator').hide();
						$("#refreshLoc").prop("disabled", false);
						$("#ApplyBtn").prop("disabled", false);
						$('#loadBut').show();
						loading = false; // Reset loading flag even on error
					}
				});
			} else {
				console.log("All posts loaded");
				$('#loadBut').hide();
			}
		}
	</script>
	<script>
		var page = 2; // Initialize the page number for lazy loading
		var loading = false; // Flag to track if loading is in progress

		$(window).scroll(function () {
			if (
				!loading &&
				$(window).scrollTop() + $(window).height() >= $(document).height() - 100
			) {
				
				loading = true; // Set loading flag to true
				loadMorePosts();
			}
		});



	</script>


	<script>
		$(document).ready(function () {

			$('#mediaManagementModal').on('show.bs.modal', function (event) {
				$.ajax({
					url: '/AdminApi/GetAllCategories',
					type: 'GET',
					dataType: 'json',
					success: function (data) {
						var categoryDropdown = $('#categoryDropdownModel');
						categoryDropdown.empty();
						$.each(data, function (key, entry) {
							categoryDropdown.append($('<option></option>').attr('value', entry.categoryId).text(entry.categoryName));
						});
					},
					error: function (error) {
						console.error('Error fetching category data:', error);
					}
				});
			});
		});

	</script>


	<script>
		$('#reportPostModal').on('show.bs.modal', function (event) {
			var modal = $(this);
			var mediaPostId = $(event.relatedTarget).data('id');
			$('#mpostIdInput').val(mediaPostId);

			$.ajax({
				url: '/Home/GetMediaPostReportTypes',
				type: 'GET',
				data: { mediaPostId: mediaPostId },
				success: function (response) {
					var options = '';

					response.forEach(function (reason) {
						options += `<option value="${reason.reportTypeId}" data-description="${reason.description}" data-mpostid="${mediaPostId}">${reason.type}</option>`;
					});

					$('#reportReason').html(options);

					$('#reportReason').on('change', function () {
						var selectedDescription = $(this).find(':selected').data('description');
						var selectedMpostId = $(this).find(':selected').data('mpostid');
						$('#descriptionDisplay').val(selectedDescription);
					}).trigger('change');
				},
				error: function (error) {
					console.error('Error fetching report types:', error);
				}
			});
		});

		$('#reportButton').on('click', function () {
			var selectedMpostId = $('#reportReason').find(':selected').data('mpostid');
			var selectedReportTypeId = $('#reportReason').val();

			var formData = new FormData();
			formData.append('ReportTypeId', selectedReportTypeId);
			formData.append('MpostId', selectedMpostId);

			$.ajax({
				url: '/Home/AddReportInMediaPost',
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				success: function (data) {
					$('#success-body').text(data);
					$('#alertSuccess').show();
					setTimeout(function () {
						$('#alertSuccess').hide();
					}, 3000);
				},
				error: function (error) {
					$('#error-body').text(error.responseText);
					$('#alertDanger').show();
					setTimeout(function () {
						$('#alertDanger').hide();
					}, 3000);
				}
			});
		});
	</script>

	<script>
		$(document).ready(function () {
			$('#deletePostModal').on('show.bs.modal', function (event) {
				var button = $(event.relatedTarget);
				var mediaPostId = button.data('mpid');

				$('#deletePostButton').data('mpid', mediaPostId);
			});

			$('#deletePostButton').on('click', function (event) {
				var mediaPostId = $(this).data('mpid');

				var formData = new FormData();
				formData.append('mediaPostId', mediaPostId);

				$.ajax({
					url: '/Home/DeleteMediaPost',
					type: 'POST',
					data: formData,
					processData: false,
					contentType: false,
					success: function (data) {
						$('#post-container').empty();
						page = 1;
						loadMorePosts();
						$('#success-body').text(data);
						$('#alertSuccess').show();
						setTimeout(function () {
							$('#alertSuccess').hide();
						}, 3000);
					},
					error: function (error) {
						$('#error-body').text(error.responseText);
						$('#alertDanger').show();
						setTimeout(function () {
							$('#alertDanger').hide();
						}, 3000);
					}
				});
			});
		});
	</script>


	<script>
		$(document).ready(function () {
			let currentPage = 1;
			let mediaPostId;
			let resCount = 0;


			$('#commentsModal').on('show.bs.modal', function (event) {
				mediaPostId = $(event.relatedTarget).data('id');

				mediaPostImage = $(event.relatedTarget).data('postimage');
				
				$('#mediaPostCommentImage').attr('src', mediaPostImage);

				// $(window).scroll(function () {
				// 	if (
				// 		!commentLoading &&
				// 		$(window).scrollTop() + $(window).height() >= $(document).height() - 100
				// 	) {
				// 		commentLoading = true;
				// 		loadMoreComments();
				// 	}
				// });

				loadMoreComments();
			});

			$('#commentsModal').on('hide.bs.modal', function () {
				currentPage = 1;

				if(resCount > 0){
					resCount--;
				}

				$('#commentsContainer').empty();
				$('#commentPager').show();
			});

			function displayComments(comments) {
				let commentsHtml = '';
				comments.forEach(function (comment) {
					commentsHtml += `
												<div class="row align-items-end">
													<div class="col-auto">
														<img class="avatar" src="${comment.profilePicture}" alt="User Avatar">
													</div>
													<div class="col col-lg-10 mt-3">
														<div class="chat-bubble">
															<div class="chat-bubble-title">
																<div class="row">
																	<div class="col chat-bubble-author">${comment.firstName} ${comment.lastName}</div>
																	<div class="col-auto chat-bubble-date">${comment.commnetDate}</div>
																</div>
															</div>
															<div class="chat-bubble-body">
																<!-- Displaying the comment content -->
																<p>${comment.commentContent}</p>
															</div>
														</div>
													</div>
												</div>
												`;
				});
				$('#commentsContainer').append(commentsHtml);
			}

			function loadMoreComments() {
				$.ajax({
					url: `/Home/GetMediaPostComments`,
					type: 'GET',
					data: { mediaPostId: mediaPostId, page: currentPage },
					success: function (response) {

						if (response == 'no more posts' && resCount == 0) {
							$('#commentPager').hide();
							$('#commentsContainer').html('<div class="text-center d-flex flex-column align-items-center" style="height: 100%;"><i class="ti ti-messages fa-6x mb-3 mt-7" style="font-size: 150px;"></i><p style="font-weight: bold;">No comments yet. Be the first one!</p></div>');
							return;
						}

						if (response == 'no more posts') {
							$('#commentPager').hide();
						}

						if (response.length > 0) {
							if (response.length < 5) {
								$('#commentPager').hide();
							}

							displayComments(response);
							currentPage++;
							resCount++;
							commentLoading = false;
							$('#commentsModal').scrollTop($('#commentsModal')[0].scrollHeight);
						}
						else {
							commentLoading = false;
							$('#commentPager').hide();
						}
					},
					error: function (error) {
						console.error('Error loading more comments:', error);
					}
				});
			}

			$('#loadMoreComments').on('click', function () {
				loadMoreComments();
			});

			function addComment() {
				var commentContent = $('#commentContentInput').val();
				var formData = new FormData();
				formData.append('PostId', mediaPostId);
				formData.append('CommentContent', commentContent);

				$.ajax({
					url: '/Home/AddCommentToMediaPost',
					type: 'POST',
					data: formData,
					processData: false,
					contentType: false,
					success: function (data) {
						$('#commentContentInput').val('');
						currentPage = 1;
						$('#commentsContainer').empty();
						$('#commentPager').show();
						loadMoreComments();
					},
					error: function (error) {
						console.error('Error adding comment:', error);
					}
				});
			}

			$('#addCommentButton').on('click', function () {
				addComment();
			});

			$('#commentContentInput').on('keydown', function (event) {
				if (event.keyCode === 13) {
					event.preventDefault();
					addComment();
				}
			});

			$('.commentBtn').on('click', function (event) {

				var mediaPostId = $(this).data('id');
				var count = $('span[data-mpcommentid="' + mediaPostId + '"]');
				var currentCommentsCount = parseInt(count.text(), 10);
				var commentContent = $('input[data-commentinput="' + mediaPostId + '"]').val();
				var formData = new FormData();
				formData.append('PostId', mediaPostId);
				formData.append('CommentContent', commentContent);

				$.ajax({
					url: '/Home/AddCommentToMediaPost',
					type: 'POST',
					data: formData,
					processData: false,
					contentType: false,
					success: function (data) {
						$('input[data-commentinput="' + mediaPostId + '"]').val('');
						count.text(currentCommentsCount + 1);
						$('#success-body').text(data);
						$('#alertSuccess').show();
						setTimeout(function () {
							$('#alertSuccess').hide();
						}, 4000);
					},
					error: function (error) {
						$('#error-body').text(error.responseText);
						$('#alertDanger').show();
						setTimeout(function () {
							$('#alertDanger').hide();
						}, 4000);
						console.error('Error adding comment:', error);
					}
				});
			});
		});
	</script>



	<script>
		$(document).ready(function () {

			var myDropzone = new Dropzone("#editDropzoneDefault", {
				uploadMultiple: false,
				maxFiles: 1,
				acceptedFiles: 'image/jpeg,image/jpg,image/png',
				maxFilesize: 10,
				maxFilesizeUnit: 'MB',
				autoProcessQueue: false,
				paramName: 'Image',
				addRemoveLinks: true,
				parallelUploads: 1,
				dictDefaultMessage: "Upload a new Image from here!",
				init: function () {
					var submitButton = document.querySelector("#editPost");
					var self = this;

					this.on("addedfile", function () {
						simulateUpload();
					});

					function simulateUpload() {
						var file = self.files[0];
						var totalSteps = 100;
						var currentStep = 0;
						var uploadInterval = setInterval(function () {
							var random = 15 + Math.random() * 25;
							currentStep += random;
							var progress = currentStep;
							self.emit('uploadprogress', file, progress, progress);
							if (currentStep >= totalSteps) {
								clearInterval(uploadInterval);
								self.emit('success', file, 'success', null);
								self.emit('complete', file);
								self.processQueue();
							}
						}, 200);
					}
				}
			});

			$('#editMediaPostModal').on('show.bs.modal', function (event) {
				$.ajax({
					url: '/AdminApi/GetAllCategories',
					type: 'GET',
					dataType: 'json',
					success: function (data) {
						var categoryDropdown = $('#editCategoryDropdownModel');
						categoryDropdown.empty();
						$.each(data, function (key, entry) {
							categoryDropdown.append($('<option></option>').attr('value', entry.categoryId).text(entry.categoryName));
						});
					},
					error: function (error) {
						console.error('Error fetching category data:', error);
					}
				});
			});

			$('#editMediaPostModal').on('shown.bs.modal', function (event) {
				var button = $(event.relatedTarget);
				var mediaPostId = button.data('mpid');
				$.ajax({
					url: '/Home/GetMediaPostDetails',
					type: 'GET',
					data: { mediaPostId: mediaPostId },
					success: function (data) {
						$('#editPostInCity').val(data.cityId);
						$('#editMediaTitle').val(data.shortDescription);
						$('#editMediaDescription').val(data.longDescription);
						$('#oldImage').attr('src', data.image);
						$('#editMediaPostModal').modal('show');
					},
					error: function () {
						console.log('Error fetching media post details.');
					}
				});

				$("#editPost").click(function () {
					var data = {
						Id: mediaPostId,
						CategoryId: $('#editCategoryDropdownModel').val(),
						CityId: $('#editPostInCity').val(),
						ShortDescription: $('#editMediaTitle').val(),
						LongDescription: $('#editMediaDescription').val(),
					};

					var formData = new FormData();
					for (var key in data) {
						formData.append(key, data[key]);
					}
					var file = myDropzone.files[0];
					if (file) {
						formData.append('Image', file);
					}
					$.ajax({
						url: '/Home/EditMediaPost',
						type: 'POST',
						data: formData,
						processData: false,
						contentType: false,
						success: function (data) {
							myDropzone.removeAllFiles(true);
							$('#post-container').empty();
							page = 1;
							loadMorePosts();
							$('#success-body').text(data);
							$('#alertSuccess').show();
							setTimeout(function () {
								$('#alertSuccess').hide();
							}, 3000);
						},
						error: function (error) {
							$('#error-body').text(error.responseText);
							$('#alertDanger').show();
							setTimeout(function () {
								$('#alertDanger').hide();
							}, 3000);
						}
					});
				});


			});
		});

	</script>

}